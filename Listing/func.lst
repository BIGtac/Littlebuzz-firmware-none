C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FUNC
OBJECT MODULE PLACED IN .\Output\func.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE User\func.c LARGE BROWSE INCDIR(.\Common\inc;.\Driver\inc;.\BSP;.\Startup;.
                    -\User) DEBUG OBJECTEXTEND PRINT(.\Listing\func.lst) OBJECT(.\Output\func.obj)

line level    source

   1          /********************************************************************
   2          作者：Songyimiao
   3          建立日期: 20160411
   4          版本：V1.0
   5          喵呜实验室版权所有
   6          /********************************************************************/
   7          #include "includes.h"
   8          unsigned short SoftTimer=0;
   9          int Compensation=0;
  10          unsigned char code Throttle[130]={              //专家数据存储，4.3V时最大油门补偿59
  11                                                                                  59,59,58,57,56, 56,55,54,53,52,  //3.0-3.1V
  12                                                                                  51,50,49,48,47, 47,46,46,45,45,  //3.1-3.2V
  13                                                                                  45,44,44,43,42, 42,41,41,40,40,  //3.2-3.3V
  14                                                                                  39,39,38,37,36, 35,34,34,33,33,  //3.3-3.4V
  15                                                                                  33,33,32,32,32, 32,31,31,30,30,  //3.4-3.5V
  16                                                                                  29,29,28,28,28, 28,28,28,27,27,  //3.5-3.6V
  17                                                                                  27,27,26,26,25, 25,24,24,23,23,  //3.6-3.7V
  18                                                                                  22,22,21,21,20, 20,20,19,18,18,  //3.7-3.8V
  19                                                                                  17,17,16,16,15, 15,15,14,14,13,  //3.8-3.9V
  20                                                                                  13,13,12,12,12, 11,11,10,10,10,  //3.9-4.0V
  21                                                                                  9 ,9 ,9 ,9 ,8 , 8 ,8 ,7 ,7 ,7 ,  //4.0-4.1V
  22                                                                                  6 ,6 ,6 ,6 ,6 , 5 ,5 ,5 ,5 ,5 ,  //4.1-4.2V
  23                                                                                  4 ,4 ,3 ,3 ,2 , 2 ,1 ,1 ,0 ,0 ,  //4.2-4.3V
  24          
  25                                                                                  } ;
  26          float module,Comp=110;
  27          float g_Throttle; //油门
  28          char th;
  29          //float code g_Th[3]={4,3.5,4};         //分段油门
  30          int PWM1=0,PWM2=0,PWM3=0,PWM4=0;
  31          unsigned char unlock=0;
  32          
  33          int g_LastCountRunAway,g_CountRunAway;
  34          int MotorOut1,MotorOut2,MotorOut3,MotorOut4;
  35          double pitch, yaw, roll;
  36          double Angle_ax, Angle_ay, Angle_az;
  37          double Angle_gx, Angle_gy, Angle_gz;
  38          float g_fPower,g_fPowerM,g_fPower_Last;
  39          int g_iPower_Limit;
  40          int g_fGyroXOffset,g_fGyroYOffset,g_fGyroZOffset;
  41          char g_fOffsetx=0,g_fOffsety=0;
  42          unsigned int xdata g_uiStartCount;
  43          unsigned char xdata g_ucLEDCount;
  44          int i;
  45          /******角度控制参数******/
  46          int   g_iAccel_X_Axis,g_iAccel_Y_Axis,g_iAccel_Z_Axis ; //加速度X轴数据
  47          int   g_iGyro_X_Axis,g_iGyro_Y_Axis,g_iGyro_Z_Axis  ;   //陀螺仪Y轴数据
  48          
  49          long int  g_liAccSum;
  50          long int  g_liGyroSum;
  51          float g_fCarAngle;                              //车模倾角
  52          float g_fGyroAngleSpeed;                        //角速度                        
  53          float g_fGyroscopeAngleIntegral;        //角速度积分值
  54          float g_fGravityAngle;                          //加速度初步计算得到的倾角
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 2   

  55          int g_iGyroOffset;
  56          /******速度控制参数******/
  57          int   g_iLeftMotorPulse;
  58          int   g_iRightMotorPulse;
  59          int   g_iLeftMotorPulseSigma;
  60          int   g_iRightMotorPulseSigma;
  61          float g_fCarSpeed;
  62          float g_fCarSpeedOld;
  63          float g_fCarPosition;
  64          unsigned char g_ucSpeedControlPeriod ;
  65          unsigned char g_ucSpeedControlCount ;
  66          
  67          float g_fXAngleRemote,g_fYAngleRemote,g_fZAngleRemote;
  68          float g_fXAngleCtrOut,g_fYAngleCtrOut,g_fZAngleCtrOut;
  69          float g_fXAngleError,g_fYAngleError;
  70          float g_fXP,g_fXI,g_fXD;
  71          float g_fYP,g_fYI,g_fYD;                                                         
  72          float g_fXDeriv,g_fXDeltaOld,g_fYDeriv,g_fYDeltaOld;
  73          float Angle_Rx,Angle_Ry,Angle_gy_R;
  74          float Out_PID_X,g_fXAngleError_In,g_fXAngleErrorIntegral_IN;
  75          float Out_PID_Y,g_fYAngleError_In,g_fYAngleErrorIntegral_IN;
  76          float g_fXAngleErrorIntegral,g_fYAngleErrorIntegral;
  77          int g_x,g_y,g_z;
  78          
  79          float code g_fcXAngle_P_Out=5.0; //6
  80          float code g_fcXAngle_I_Out=0.01; //0.01
  81          float code g_fcXAngle_P_In=0.6; //        max1.2         1
  82          float code g_fcXAngle_I_In=0.01; //                       0.01
  83          float code g_fcXAngle_D_In=2.0; //        max9   4.5
  84          
  85          float code g_fcYAngle_P_Out=5.0; //
  86          float code g_fcYAngle_I_Out=0.01; //
  87          float code g_fcYAngle_P_In=0.6; //max 0.6
  88          float code g_fcYAngle_I_In=0.01; //
  89          float code g_fcYAngle_D_In=2.0; //max 5
  90          
  91          float code g_fcZAngle_P=4.5;//5
  92          float code g_fcZAngle_D=3.5; //4
  93          float code g_fcZAngle_I=0.1;
  94          float Z_integral=0;
  95          float Anglezlate;
  96          float g_fYAngleErrorIntegral_IN;
  97          float gyro_y_Last,gyro_x_Last,gyro_z_Last;   //储存上一次角速度数据
  98          unsigned char g_COMThrottle;
  99                     
 100          /******蓝牙控制参数******/
 101          float xdata g_fBluetoothSpeed;
 102          float xdata g_fBluetoothDirection;
 103          
 104          /***************************************************************
 105          ** 作　  者: Songyimiao
 106          ** 官    网：http://www.miaowlabs.com
 107          ** 淘    宝：http://miaowlabs.taobao.com
 108          ** 日　  期: 2015年11月29日
 109          ** 函数名称: DriversInit
 110          ** 功能描述: 底层驱动初始化            
 111          ** 输　  入:   
 112          ** 输　  出:   
 113          ** 备    注: 
 114          ********************喵呜实验室版权所有**************************
 115          ***************************************************************/
 116          void DriversInit(void)
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 3   

 117          {
 118   1      
 119   1              GPIOInit();
 120   1              Timer1Init();
 121   1              PWMInit();
 122   1              Uart1Init();
 123   1              ADCInit();
 124   1      
 125   1      }
 126          
 127          void ParametersInit()
 128          {
 129   1              g_fPower = 0;
 130   1              g_fPower_Last=0;
 131   1              g_fGyroXOffset=g_fGyroYOffset=g_fGyroZOffset=0; 
 132   1      }
 133          
 134          /***************************************************************
 135          ** 作　  者: Songyimiao
 136          ** 官    网：http://www.miaowlabs.com
 137          ** 淘    宝：http://miaowlabs.taobao.com
 138          ** 日　  期: 2015年11月29日
 139          ** 函数名称: DataSynthesis
 140          ** 功能描述: 数据合成函数            
 141          ** 输　  入:   
 142          ** 输　  出:   
 143          ** 备    注: 
 144          ********************喵呜实验室版权所有**************************
 145          ***************************************************************/
 146          int DataSynthesis(unsigned char REG_Address)    
 147          {
 148   1              char idata uiHighByte; /*高八位*/
 149   1              char idata ucLowByte; /*低八位*/
 150   1      
 151   1              uiHighByte = Single_ReadI2C(REG_Address)  ;
 152   1              ucLowByte  = Single_ReadI2C(REG_Address+1);
 153   1      
 154   1              return ((uiHighByte << 8) + ucLowByte);   /*返回合成数据*/
 155   1      }
 156          
 157          /***************************************************************
 158          ** 作　  者: Songyimiao
 159          ** 官    网：http://www.miaowlabs.com
 160          ** 淘    宝：http://miaowlabs.taobao.com
 161          ** 日　  期: 2015年11月29日
 162          ** 函数名称: SampleInputVoltage
 163          ** 功能描述: MPU6050采样函数            
 164          ** 输　  入:   
 165          ** 输　  出:   
 166          ** 备    注: 
 167          ********************喵呜实验室版权所有**************************
 168          ***************************************************************/
 169          void SampleInputVoltage(void)
 170          {       
 171   1      
 172   1              g_iGyro_X_Axis   = DataSynthesis(GYRO_XOUT_H) ; //陀螺仪X轴
 173   1              g_iGyro_Y_Axis   = DataSynthesis(GYRO_YOUT_H) ; //陀螺仪Y轴
 174   1              g_iGyro_Z_Axis   = DataSynthesis(GYRO_ZOUT_H) ; //陀螺仪Z轴
 175   1          g_iAccel_X_Axis  = DataSynthesis(ACCEL_XOUT_H); //加速度X轴         
 176   1              g_iAccel_Y_Axis  = DataSynthesis(ACCEL_YOUT_H); //加速度Y轴
 177   1              g_iAccel_Z_Axis  = DataSynthesis(ACCEL_ZOUT_H); //加速度Z轴
 178   1      }
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 4   

 179          
 180          /***************************************************************
 181          ** 作　  者: Songyimiao
 182          ** 官    网：http://www.miaowlabs.com
 183          ** 淘    宝：http://miaowlabs.taobao.com
 184          ** 日　  期: 2015年11月29日
 185          ** 函数名称: GyroRevise
 186          ** 功能描述: 陀螺仪校正函数            
 187          ** 输　  入:   
 188          ** 输　  出:   
 189          ** 备    注: 
 190          ********************喵呜实验室版权所有**************************
 191          ***************************************************************/
 192          void GetGyroRevise()
 193          {
 194   1              long int tempsumx,tempsumy,tempsumz;
 195   1              int temp;
 196   1              tempsumx=0;
 197   1              tempsumy=0;
 198   1              tempsumz=0;
 199   1              for(temp=0;temp<100;temp++)
 200   1              {
 201   2                      tempsumx += DataSynthesis(GYRO_XOUT_H) ;
 202   2                      tempsumy += DataSynthesis(GYRO_YOUT_H) ;
 203   2                      tempsumz += DataSynthesis(GYRO_ZOUT_H) ;
 204   2              }
 205   1              g_fGyroXOffset = tempsumx/100;
 206   1              g_fGyroYOffset = tempsumy/100;
 207   1              g_fGyroZOffset = tempsumz/100;
 208   1      }
 209          
 210          
 211          
 212          void LEDRUN()
 213          {
 214   1              LED0=0;
 215   1              Delaynms(300);
 216   1              LED1=0;
 217   1              Delaynms(300);
 218   1              LED2=0;
 219   1              Delaynms(300);
 220   1              LED3=0;
 221   1              Delaynms(300);
 222   1              LED3=1;
 223   1              Delaynms(300);
 224   1              LED2=1;
 225   1              Delaynms(300);
 226   1              LED1=1;
 227   1              Delaynms(300);
 228   1              LED0=1; 
 229   1      }
 230          
 231          
 232          
 233          
 234          
 235          
 236          /***************************************************************
 237          ** 作　  者: Songyimiao
 238          ** 官    网：http://www.miaowlabs.com
 239          ** 淘    宝：http://miaowlabs.taobao.com
 240          ** 日　  期: 20160415
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 5   

 241          ** 函数名称: BatteryChecker
 242          ** 功能描述: 电量检测（若电量不足，将亮起红灯）           
 243          ** 输　  入:   
 244          ** 输　  出:   
 245          ** 备    注: 
 246          ********************喵呜实验室版权所有**************************
 247          ***************************************************************/
 248          void BatteryChecker()
 249          {
 250   1              float fValue;
 251   1              fValue = GetADCResult();                                        //参考电压5.02V 检测max4.3V min3.0V
 252   1              fValue = fValue / 256.0 * 5.02 ;                                
 253   1      
 254   1              g_fPower=UpdateSimpleKalman(fValue);//一阶kalman滤波
 255   1              g_fPower=g_fPower*0.01+g_fPower_Last*0.99;//低通
 256   1              g_fPower_Last = g_fPower;
 257   1              g_iPower_Limit = (int)(g_fPower*100);//限幅
 258   1              if(g_iPower_Limit>430) g_iPower_Limit=430;
 259   1              if(g_iPower_Limit<300)  g_iPower_Limit=300;
 260   1                      
 261   1              if((int)g_iPower_Limit <= 370)                                          
 262   1              {
 263   2                      LED_RED=0;
 264   2              }
 265   1              else
 266   1              {
 267   2                      LED_RED=1;
 268   2              }
 269   1      
 270   1      }
 271          
 272          void TickSound(void)
 273          {
 274   1              PWMCKS=0x10;         
 275   1              T2L = 0xDB;     
 276   1              T2H = 0xFF;
 277   1              PWM(960,960,960,960);
 278   1              Delaynms(100); //校准完毕滴一声
 279   1          PWM(1000,1000,1000,1000);   
 280   1          PWMCKS=0x00;
 281   1              T2L = 0xC5;             //设定定时初值
 282   1              T2H = 0xFF;             //设定定时初值                  
 283   1      }
 284          
 285          void AttitudeControl()
 286          {
 287   1              if(RxBuf[4]>=143){ g_fZAngleRemote = ((float)RxBuf[4]-143)*1.5f;}
 288   1              else if (RxBuf[4]<=113){ g_fZAngleRemote = ((float)RxBuf[4]-113)*1.5f;}
 289   1              else {g_fZAngleRemote = 0;}
 290   1              Angle_gz= g_fZAngleRemote-Angle_gz; 
 291   1              Z_integral += Angle_gz;
 292   1              if(g_Throttle<40)  Z_integral=0;//油门小于40积分清零
 293   1              if(Z_integral>1000)     Z_integral =1000;
 294   1              else if(Z_integral<(-1000))     Z_integral = (-1000);
 295   1              g_fZAngleCtrOut = Angle_gz*g_fcZAngle_P + Z_integral * g_fcZAngle_I;
 296   1              if(g_fZAngleCtrOut > 150) g_fZAngleCtrOut=150;
 297   1              else if (g_fZAngleCtrOut < (-150)) g_fZAngleCtrOut=(-150);
 298   1      
 299   1      
 300   1      //X轴 
 301   1              g_fXAngleRemote = ((float)RxBuf[2]- 128)/7;      //max 128/7=18
 302   1      //外环
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 6   

 303   1              roll -= g_fOffsetx;
 304   1              g_fXAngleError = g_fXAngleRemote - roll + g_fOffsetx; //ROLL对应硬件X轴
 305   1      
 306   1              if(g_Throttle>20)
 307   1              {
 308   2                      g_fXAngleErrorIntegral+=g_fXAngleError;//外环积分(油门小于某个值时不积分)
 309   2              }
 310   1              else
 311   1              {
 312   2                      g_fXAngleErrorIntegral=0; //油门小于定值时清除积分值
 313   2              }
 314   1              if(g_fXAngleErrorIntegral>500){g_fXAngleErrorIntegral=500;}
 315   1              else if(g_fXAngleErrorIntegral<-500){g_fXAngleErrorIntegral=-500;}//积分限幅
 316   1              Out_PID_X=g_fXAngleError*g_fcXAngle_P_Out+g_fXAngleErrorIntegral*g_fcXAngle_I_Out;//外环PI
 317   1      //内环
 318   1              g_fXAngleError_In = Out_PID_X - Angle_gx - g_fOffsetx ;
 319   1      
 320   1              if(g_Throttle>20)
 321   1              {
 322   2                      g_fXAngleErrorIntegral_IN += g_fXAngleError_In;//(油门小于某个值时不积分)
 323   2              }
 324   1              else
 325   1              {
 326   2                      g_fXAngleErrorIntegral_IN =0; //油门小于定值时清除积分值
 327   2              }
 328   1              if(g_fXAngleErrorIntegral_IN>500){g_fXAngleErrorIntegral_IN=500;}
 329   1              else if(g_fXAngleErrorIntegral_IN<(-500)){g_fXAngleErrorIntegral_IN=(-500);}//积分限幅
 330   1      
 331   1              g_fXAngleCtrOut=g_fXAngleError_In*g_fcXAngle_P_In+g_fXAngleErrorIntegral_IN*g_fcXAngle_I_In-(Angle_gx-gyr
             -o_x_Last)*g_fcXAngle_D_In;//内环PID
 332   1              gyro_x_Last = Angle_gx;
 333   1              
 334   1              if(g_fXAngleCtrOut>  1000) {g_fXAngleCtrOut =  1000; }  //输出量限幅
 335   1              if(g_fXAngleCtrOut<(-1000)){g_fXAngleCtrOut =(-1000);}
 336   1              
 337   1              
 338   1      
 339   1                      
 340   1              
 341   1      //Y轴部分
 342   1              g_fYAngleRemote = ((float)RxBuf[3]- 128)/7;      //max18
 343   1      //外环
 344   1              pitch -= g_fOffsety;
 345   1              g_fYAngleError = g_fYAngleRemote - pitch  ; //ROLL对应硬件X轴
 346   1      
 347   1              if(g_Throttle>20)
 348   1              {
 349   2                      g_fYAngleErrorIntegral+=g_fYAngleError;//外环积分(油门小于某个值时不积分)
 350   2              }
 351   1              else
 352   1              {
 353   2                      g_fYAngleErrorIntegral=0; //油门小于定值时清除积分值
 354   2              }
 355   1              if(g_fYAngleErrorIntegral>500){g_fYAngleErrorIntegral=500;}
 356   1              else if(g_fYAngleErrorIntegral<-500){g_fYAngleErrorIntegral=-500;}//积分限幅
 357   1              Out_PID_Y=g_fYAngleError*g_fcXAngle_P_Out+g_fYAngleErrorIntegral*g_fcYAngle_I_Out;//外环PI
 358   1      //内环
 359   1              g_fYAngleError_In = Out_PID_Y - Angle_gy ;
 360   1      
 361   1              if(g_Throttle>20)
 362   1              {
 363   2                      g_fYAngleErrorIntegral_IN += g_fYAngleError_In;//(油门小于某个值时不积分)
C51 COMPILER V9.00   FUNC                                                                  12/22/2016 15:11:34 PAGE 7   

 364   2              }
 365   1              else
 366   1              {
 367   2                      g_fYAngleErrorIntegral_IN =0; //油门小于定值时清除积分值
 368   2              }
 369   1              if(g_fYAngleErrorIntegral_IN>500){g_fYAngleErrorIntegral_IN=500;}
 370   1              else if(g_fYAngleErrorIntegral_IN<(-500)){g_fYAngleErrorIntegral_IN=(-500);}//积分限幅
 371   1      
 372   1              g_fYAngleCtrOut=g_fYAngleError_In*g_fcYAngle_P_In+g_fYAngleErrorIntegral_IN*g_fcYAngle_I_In-(Angle_gy-gyr
             -o_y_Last)*g_fcYAngle_D_In;//内环PID
 373   1              gyro_y_Last = Angle_gy;
 374   1              
 375   1          if(g_fYAngleCtrOut>1000){g_fYAngleCtrOut=1000;}  //输出量限幅
 376   1              if(g_fYAngleCtrOut<-1000){g_fYAngleCtrOut=-1000;}
 377   1      
 378   1              
 379   1              //油门补偿      
 380   1              Comp = 76.0f+Throttle[g_iPower_Limit-300]+Compensation;
 381   1              g_Throttle += Comp*g_Throttle/127.0f;
 382   1              
 383   1              //倾角补偿
 384   1              ////角度转变弧度的单位 #define AtR 0.0174533f  //pi/180
 385   1              module = sqrt(roll*roll+pitch*pitch);
 386   1              g_Throttle += g_Throttle * (1.0f - cos(module * 0.0174533f));
 387   1      
 388   1              MotorOut2= (int)(g_Throttle * 4 + g_fYAngleCtrOut - g_fXAngleCtrOut+ g_fZAngleCtrOut ); //255*4=1020
 389   1              MotorOut4= (int)(g_Throttle * 4 - g_fYAngleCtrOut + g_fXAngleCtrOut+ g_fZAngleCtrOut );                 
 390   1              MotorOut1= (int)(g_Throttle * 4 - g_fYAngleCtrOut - g_fXAngleCtrOut- g_fZAngleCtrOut );
 391   1              MotorOut3= (int)(g_Throttle * 4 + g_fYAngleCtrOut + g_fXAngleCtrOut- g_fZAngleCtrOut );
 392   1      
 393   1      
 394   1              PWM1=(1000 - MotorOut1 );         
 395   1              if(PWM1>1000){PWM1=1000;}
 396   1              else if(PWM1<0){PWM1=0;}
 397   1              
 398   1              PWM3=(1000 - MotorOut3 );
 399   1              if(PWM3>1000){PWM3=1000;}
 400   1              else if(PWM3<0){PWM3=0;}
 401   1      
 402   1              PWM2 = (1000 - MotorOut2 );        
 403   1              if(PWM2>1000){PWM2=1000;}
 404   1              else if(PWM2<0){PWM2=0;}
 405   1              
 406   1              PWM4 = (1000 - MotorOut4 );
 407   1              if(PWM4>1000){PWM4=1000;}
 408   1              else if(PWM4<0){PWM4=0;}
 409   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3817    ----
   CONSTANT SIZE    =    182    ----
   XDATA SIZE       =    312      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----       2
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
